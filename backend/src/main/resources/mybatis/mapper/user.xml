<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">
	<select id="getByEmail" resultType="userVo" parameterType="string">
		<![CDATA[
			select * from user
			where email = AES_ENCRYPT(#{email}, SHA2('7755',512))
		]]>
	</select>
	
	<insert id="join" parameterType="userVo">
		<![CDATA[
			insert into user 
				values(
				null, 
				#{id},
				SHA2(#{password},256),
				AES_ENCRYPT(#{name}, SHA2('7755',512)),
				AES_ENCRYPT(#{phone}, SHA2('7755',512)),
				AES_ENCRYPT(#{email}, SHA2('7755',512)),
				AES_ENCRYPT(#{birth}, SHA2('7755',512)),
				#{gender},
				#{role}
				);
		]]>
		<selectKey keyProperty="no" resultType="long" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	
	<select id="login" parameterType="userVo" resultType="userVo">
		<![CDATA[
			select
			no,
			id,
			convert(AES_DECRYPT(name, SHA2('7755', 512))using utf8) as name,
			convert(AES_DECRYPT(phone, SHA2('7755', 512))using utf8) as phone,
			convert(AES_DECRYPT(email, SHA2('7755', 512))using utf8) as email,
			convert(AES_DECRYPT(birth, SHA2('7755', 512))using utf8) as birth,
			gender,
			role
			from user
			where id=#{id} and password=SHA2(#{password},256);
		]]>
	</select>
	
	<update id="modifyUser" parameterType="map">
		<![CDATA[
			update user 
		]]>
		<trim prefix="SET" suffixOverrides=",">

		    <if test="vo.password != null">
		     <![CDATA[
		      	password = SHA2(#{vo.password},256),
		     ]]>
		    </if>
		    <if test="vo.name != null">
    	     <![CDATA[
		        name = AES_ENCRYPT(#{vo.name}, SHA2('7755',512)),
		     ]]>
		    </if>
		    <if test="vo.phone != null">
		     <![CDATA[
			    phone = AES_ENCRYPT(#{vo.phone}, SHA2('7755',512)),
		     ]]>
		    </if>
		    <if test="vo.email != null">
		     <![CDATA[
		        email = AES_ENCRYPT(#{vo.email}, SHA2('7755',512)),
		     ]]>
		    </if>
		    <if test="vo.birth != null">
		     <![CDATA[
      	        birth = AES_ENCRYPT(#{vo.birth}, SHA2('7755',512)),
		     ]]>
		    </if>
		    <if test="vo.gender != null">
		     <![CDATA[
		        gender = #{vo.gender},
		     ]]>
		    </if>
		    <if test="vo.role != null">
		     <![CDATA[
     		    role = #{vo.role}
		     ]]>
		    </if>
		</trim>
		<![CDATA[
			where no = #{no}
		]]>
	</update>
	
	<select id="findId" parameterType="userVo" resultType="userVo">
		<![CDATA[
			select no,
				   id,
				   convert(AES_DECRYPT(name, SHA2('7755', 512))using utf8) as name,
				   convert(AES_DECRYPT(phone, SHA2('7755', 512))using utf8) as phone
			from user
				 where name = AES_ENCRYPT(#{name}, SHA2('7755',512))
				   and phone = AES_ENCRYPT(#{phone}, SHA2('7755',512))
		]]>
	</select>
	
	<select id="existId" resultType="userVo" parameterType="string">
		<![CDATA[
			select no from user
			where id = #{id}
		]]>
	</select>
	
	<update id="modifyPassword" parameterType="string">
		<![CDATA[
			update user set password = SHA2(#{newPassword}, 256)
		]]>
	</update>
	
	<delete id="deleteProductInCart">
		<![CDATA[
			delete from cart where option_no = #{no}
		]]>
	</delete>
	
	
	<select id="getUserList" resultType="userVo">
		<![CDATA[
			select
				no,
				id,
				convert(AES_DECRYPT(name, SHA2('7755', 512))using utf8) as name,
				convert(AES_DECRYPT(phone, SHA2('7755', 512))using utf8) as phone,
				convert(AES_DECRYPT(email, SHA2('7755', 512))using utf8) as email,
				convert(AES_DECRYPT(birth, SHA2('7755', 512))using utf8) as birth,
				gender,
				role
				from user
		]]>
	</select>
	
	<select id="getUser" parameterType="string" resultType="userVo">
		<![CDATA[
			select
				no,
				id,
				password,
				convert(AES_DECRYPT(name, SHA2('7755', 512))using utf8) as name,
				convert(AES_DECRYPT(phone, SHA2('7755', 512))using utf8) as phone,
				convert(AES_DECRYPT(email, SHA2('7755', 512))using utf8) as email,
				convert(AES_DECRYPT(birth, SHA2('7755', 512))using utf8) as birth,
				gender,
				role
				from user
				where id=#{value}
		]]>
	</select>
	
	<delete id="deleteUser" parameterType="long">
		<![CDATA[
			delete from user where no = #{no}
		]]>
	</delete>
	
	<select id="getUserSearchList" resultType="userVo">
		<![CDATA[
			select
					no,
					id,
					convert(AES_DECRYPT(name, SHA2('7755', 512))using utf8) as name,
					convert(AES_DECRYPT(phone, SHA2('7755', 512))using utf8) as phone,
					convert(AES_DECRYPT(email, SHA2('7755', 512))using utf8) as email,
					convert(AES_DECRYPT(birth, SHA2('7755', 512))using utf8) as birth,
					gender,
					role
			from user
		]]>
		<if test="'name'.equals(menu)">
			where name like CONCAT('%', AES_ENCRYPT(#{keyword}, SHA2('7755',512)), '%')
		</if>
		
		<if test="'id'.equals(menu)">
			where id like CONCAT('%', #{keyword}, '%')
		</if>
		
		<if test="'no'.equals(menu)">
			where no like CONCAT('%', #{keyword}, '%')
		</if>
		
		<if test="'phone'.equals(menu)">
			where phone like CONCAT('%', AES_ENCRYPT(#{keyword}, SHA2('7755',512)), '%')
		</if>
		
		<if test="'email'.equals(menu)">
			where email like CONCAT('%', AES_ENCRYPT(#{keyword}, SHA2('7755',512)), '%')
		</if>
		
		<if test="'role'.equals(menu)">
			where role like CONCAT('%', AES_ENCRYPT(#{keyword}, SHA2('7755',512)), '%')
		</if>
	</select>

	<insert id="addToCart" parameterType="cartVo">
		<![CDATA[
			insert into cart
		]]>
		<choose>
			<when test="userNo != null">
			<![CDATA[
				(user_no, product_option_no, count)
				values(#{userNo}, #{productOptionNo}, #{count})
			]]>
			</when>
			<when test="nonUserId != null">
			<![CDATA[
				(nonuser_id, product_option_no, count)
				values(#{nonUserId}, #{productOptionNo}, #{count})
			]]>
			</when>
		</choose>
	</insert>
	
	<delete id="deleteFromCart" parameterType="long">
		<![CDATA[
			delete from cart where no = #{no}		
		]]>
	</delete>
	
	<delete id="deleteListFromCart" parameterType="java.util.List">
		<![CDATA[
			delete from cart where	
		]]>
		<foreach collection="list" item="item" separator="or">
		<![CDATA[
			no = #{item} 	
		]]>
		</foreach>
	</delete>
	
	<update id="modifyCart" parameterType="cartVo">
		<![CDATA[
			update cart set count = count + #{count}
		]]>
		<choose>
			<when test="userNo != null">
			<![CDATA[
				where user_no = #{userNo} and product_option_no = #{productOptionNo}
			]]>
			</when>
			<when test="nonUserId != null">
			<![CDATA[
				where nonuser_id = #{nonUserId} and product_option_no = #{productOptionNo}
			]]>
			</when>
		</choose>
	</update>

	<update id="modifyCount" parameterType="map">
		<![CDATA[
			update cart set count = #{vo.count} where no = #{no}
		]]>
	</update>
	
	
<!-- ===================================================ResultMap=============================================================== -->	
	<select id="getCartListByUser" resultType="cartDto" parameterType="long">
		<![CDATA[
			 select a.no,
				   b.option_value as optionValue, 
			       b.additional_price as additionalPrice, 
			       c.name as productName,
			       c.no as productNo, 
			       c.price, 
			       c.shipping_fee as shippingFee, 
			       a.count 
			from cart a, product_option b, product c 
			where a.product_option_no = b.no and b.product_no = c.no
			and user_no = #{userNo};
		]]>
	</select>
	
	<select id="getCartListByNonUser" resultType="cartDto" parameterType="string">
		<![CDATA[
			select a.no,
				   b.option_value as optionValue, 
			       b.additional_price as additionalPrice, 
			       c.name as productName,
			       c.no as productNo, 
			       c.price, 
			       c.shipping_fee as shippingFee, 
			       a.count 
			from cart a, product_option b, product c 
			where a.product_option_no = b.no and b.product_no = c.no
			and nonuser_id = #{nonUserId};
		]]>
	</select>
	
	<select id="getCartList" resultType="cartDto">
		<![CDATA[
			select a.no,
				   a.user_no as userNo,
				   a.nonmember_id as nonMemberId,
				   b.option_value as optionValue, 
			       b.additional_price as additionalPrice, 
			       c.name as productName,
			       c.no as productNo, 
			       c.price, 
			       c.shipping_fee as shippingFee, 
			       a.count 
			from cart a, product_option b, product c 
			where a.product_option_no = b.no and b.product_no = c.no
		]]>
	</select>

</mapper>